<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jeeweb.web.ebp.shop.mapper.TtaskBaseMapper" >
  <resultMap id="TtaskBase" type="cn.jeeweb.web.ebp.shop.entity.TtaskBase" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result property="tType" column="t_type" jdbcType="VARCHAR" />
    <result property="shopid" column="shopid" jdbcType="VARCHAR" />
    <result property="tUrl" column="t_url" jdbcType="VARCHAR" />
    <result property="tTitle" column="t_title" jdbcType="VARCHAR" />
    <result property="tPrice" column="t_price" jdbcType="DOUBLE" />
    <result property="tNum" column="t_num" jdbcType="NUMERIC" />
    <result property="totalprice" column="totalprice" jdbcType="DOUBLE" />
    <result property="searchprice" column="searchprice" jdbcType="DOUBLE" />
    <result property="ispcview" column="ispcview" jdbcType="VARCHAR" />
    <result property="keyword" column="keyword" jdbcType="VARCHAR" />
    <result property="spec1" column="spec1" jdbcType="VARCHAR" />
    <result property="spec2" column="spec2" jdbcType="VARCHAR" />
    <result property="classify1" column="classify1" jdbcType="VARCHAR" />
    <result property="classify2" column="classify2" jdbcType="VARCHAR" />
    <result property="classify3" column="classify3" jdbcType="VARCHAR" />
    <result property="classify4" column="classify4" jdbcType="VARCHAR" />
    <result property="isMobileview" column="is_mobileview" jdbcType="VARCHAR" />
    <result property="expressway" column="expressway" jdbcType="VARCHAR" />
    <result property="tasknum" column="tasknum" jdbcType="NUMERIC" />
    <result property="status" column="status" jdbcType="VARCHAR" />
    <result property="imgurl" column="imgurl" jdbcType="VARCHAR" />
    <result property="tasksort" column="tasksort" jdbcType="VARCHAR" />
    <result property="lowpoint" column="lowpoint" jdbcType="DOUBLE" />
    <result property="highpoint" column="highpoint" jdbcType="DOUBLE" />
    <result property="taskdisser" column="taskdisser" jdbcType="VARCHAR" />
    <result property="tasklocation" column="tasklocation" jdbcType="VARCHAR" />
    <result property="effectdate" column="effectdate" jdbcType="TIMESTAMP" />
    <result property="taskno" column="taskno" jdbcType="VARCHAR" />
    <result property="canreceivenum" column="canreceivenum" jdbcType="NUMERIC" />
    <result property="storename" column="storename" jdbcType="VARCHAR" />
    <result property="actualprice" column="actualprice" jdbcType="DOUBLE" />
    <result property="brand" column="brand" jdbcType="VARCHAR" />
    <result property="taskdeposit" column="taskdeposit" jdbcType="DOUBLE" />
    <result property="presentdeposit" column="presentdeposit" jdbcType="DOUBLE" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    DISTINCT
    t.id,
    t.t_type,
    t.shopid,t.t_url,t.t_title,t.t_price,t.t_num,t.totalPrice,t.searchPrice,t.isPcView,t.keyword,t.spec1,t.spec2,
    t.classify1,t.classify2,
    t.classify3,t.classify4,t.isMobileview,t.expressway,t.tasknum,t.status
  </sql>

  <select id="selectShopList" resultMap="TtaskBase">
    select t.*,s.shopname,(t.tasknum-t.canreceivenum) receivingnum,b.deliverynum,b.ordernum from T_task_Base t left join t_shop_base s on t.storename = s.id
    left join (select taskid,sum(confirm) confirmnum,sum(delivery) deliverynum,sum(order1) ordernum from
    (select taskid,case when taskstate=4 then 1 else 0 end confirm,
    case when taskstate=3 then 1 else 0 end delivery,
    case when taskstate=2 then 1 else 0 end order1 from t_my_task_detail) a group by taskid) b on t.id=b.taskid
    <if test="ew.sqlSegment != '' and ew.sqlSegment != null">
      <where>
        ${ew.sqlSegment}
      </where>
    </if>
  </select>


  <select id="selectTtaskBaseList" resultMap="TtaskBase">
	  select 
   	    <include refid="Base_Column_List" />
      from T_task_Base t
       <if test="ew.sqlSegment != '' and ew.sqlSegment != null">
		  <where>
		    ${ew.sqlSegment} 
		  </where>
	   </if> 
  </select>

  <select id="selectShopTask" resultMap="TtaskBase">
    SELECT
    a.*
    FROM
    (
    SELECT
    t1.*, (
    SELECT
    count(*) + 1
    FROM
    T_task_Base t
    WHERE
    t.storename = t1.storename
    and (t.lasttakingdate is null or t.lasttakingdate  <![CDATA[<]]> date_add(now(), interval - ${minute} minute))
    -- and t.id not in (select d.taskid from t_my_task_detail d where d.create_date between date_add(now(), interval - ${minute} minute) and date_add(now(), interval + 1 minute))
    AND t.id <![CDATA[<]]> t1.id
               AND t.STATUS = '0'
               AND t.canreceivenum <![CDATA[>]]> 0
    and DATE_FORMAT(t.effectdate,'%Y-%m-%d') = DATE_FORMAT(curdate(),'%Y-%m-%d')
    and DATE_FORMAT(t.effectdate,'%H:%i:%S') <![CDATA[<=]]> DATE_FORMAT(now(),'%H:%i:%S')
    ) AS group_id
    FROM
    T_task_Base t1
    where
    t1.STATUS = '0'
    and (t1.lasttakingdate is null or t1.lasttakingdate <![CDATA[<]]> date_add(now(), interval - ${minute} minute))
    -- and t1.id not in (select d.taskid from t_my_task_detail d where d.create_date between date_add(now(), interval - ${minute} minute) and date_add(now(), interval + 1 minute))
    AND t1.canreceivenum <![CDATA[>]]> 0
    and DATE_FORMAT(t1.effectdate,'%Y-%m-%d') = DATE_FORMAT(curdate(),'%Y-%m-%d')
    and DATE_FORMAT(t1.effectdate,'%H:%i:%S') <![CDATA[<=]]> DATE_FORMAT(now(),'%H:%i:%S')
    group by t1.t_url,t1.storename
    ) a
    WHERE
    a.group_id <![CDATA[<=]]> ${count}
  </select>

  <select id="selectShopTaskNew" resultMap="TtaskBase">
    SELECT *
    FROM
    T_task_Base t
    WHERE
    1=1
   and (t.lasttakingdate is null or t.lasttakingdate  <![CDATA[<]]> date_add(now(), interval - ${minute} minute))
               AND t.STATUS = '0'
               AND t.canreceivenum <![CDATA[>]]> 0
    and DATE_FORMAT(t.effectdate,'%Y-%m-%d') = DATE_FORMAT(curdate(),'%Y-%m-%d')
    and DATE_FORMAT(t.effectdate,'%H:%i:%S') <![CDATA[<=]]> DATE_FORMAT(now(),'%H:%i:%S')
    order by t.storename asc,t.canreceivenum desc
  </select>
<!-- 历史商户统计查询，隐藏 -->
  <select id="sumNumAndPrice" resultType="java.util.Map">
    select sum(t.actualprice*t.tasknum) sumActualprice,sum(deliveryPrice) sumDeliveryPrice,sum(orderPrice) sumOrderPrice,sum(finishPrice) sumFinishPrice,sum(count) sumCount,
    sum(tasknum) sumtasknum,sum(canreceivenum) sumcanreceivenum,sum(tasknum)-sum(canreceivenum) sumunanswerednum,sum(finishnum) sumfinishnum,sum(deliverynum) sumdeliverynum,sum(ordernum) sumordernum
    ,sum(receivingnum) sumreceivingnum
    from t_task_base t left join t_shop_base sb on t.storename=sb.id LEFT JOIN (
    select taskid,sum(deliveryPrice) deliveryPrice,sum(orderPrice) orderPrice,sum(finishPrice) finishPrice,count(1) count,
    sum(finishnum) finishnum,sum(deliverynum) deliverynum,sum(ordernum) ordernum,sum(receivingnum) receivingnum
    from (select taskid,
        case when taskstate=4 then pays else 0 end finishPrice,
        case when taskstate=3 then pays else 0 end deliveryPrice,
        case when taskstate=2 then pays else 0 end orderPrice,
    case when taskstate=4 then 1 else 0 end finishnum,
    case when taskstate=3 then 1 else 0 end deliverynum,
    case when taskstate=2 then 1 else 0 end ordernum,
    case when taskstate=1 then 1 else 0 end receivingnum
     from t_my_task_detail where (create_date BETWEEN #{map.create1} and #{map.create2})) a group by taskid ) b
    on t.id=b.taskid
    where
    1=1
    <if test="map.userid != '' and map.userid != null">
      and shopid=#{map.userid}
    </if>
    <if test="map.shopname != '' and map.shopname != null">
      and sb.shopname like #{map.shopname}
    </if>

    <if test="map.tTitle != '' and map.tTitle != null">
      and t.t_title like #{map.tTitle}
    </if>

    <if test="map.status != '' and map.status != null">
      and t.status = #{map.status}
    </if>
    <if test="map.article != '' and map.article != null">
      and t.article like #{map.article}
    </if>
     and (effectdate BETWEEN #{map.create1} and #{map.create2})
  </select>

  <!-- 商户统计查询，相对应历史减少t_my_task_detail表统计 -->
  <select id="showTaskBaseLoadFinance" resultType="java.util.Map">
    select sum(t.actualprice*t.tasknum) sumActualprice,sum(deliveryPrice) sumDeliveryPrice,sum(orderPrice) sumOrderPrice,sum(finishPrice) sumFinishPrice,sum(count) sumCount,
    sum(tasknum) sumtasknum,sum(canreceivenum) sumcanreceivenum,sum(tasknum)-sum(canreceivenum) sumunanswerednum,sum(finishnum) sumfinishnum,sum(deliverynum) sumdeliverynum,sum(ordernum) sumordernum
    ,sum(receivingnum) sumreceivingnum
    from t_task_base t left join t_shop_info si on t.shopid=si.userid left join t_shop_base sb on t.storename=sb.id LEFT JOIN (
    select taskid,count(1) count,
    sum(case when taskstate=4 then pays else 0 end) finishPrice,
    sum(case when taskstate=3 then pays else 0 end) deliveryPrice,
    sum(case when taskstate=2 then pays else 0 end) orderPrice,
    sum(case when taskstate=4 then 1 else 0 end) finishnum,
    sum(case when taskstate=3 then 1 else 0 end) deliverynum,
    sum(case when taskstate=2 then 1 else 0 end) ordernum,
    sum(case when taskstate=1 then 1 else 0 end) receivingnum
     from t_my_task_detail where (create_date BETWEEN #{map.create1} and #{map.create2}) group by taskid ) b
    on t.id=b.taskid
    where
    1=1
    <if test="map.userid != '' and map.userid != null">
      and shopid=#{map.userid}
    </if>
    <if test="map.shopname != '' and map.shopname != null">
      and sb.shopname like #{map.shopname}
    </if>
    <if test="map.status != '' and map.status != null">
      and t.status = #{map.status}
    </if>
    <if test="map.loginname != '' and map.loginname != null">
      and si.loginname like #{map.loginname}
    </if>
     and (effectdate BETWEEN #{map.create1} and #{map.create2})
  </select>

  <select id="selectFinanceList" resultType="java.util.Map">
    select DATE_FORMAT(t.create_date,'%Y-%m-%d') createDate,b.buyerName,sum(pays) sumPays,sum( case when taskstate=3 then pays else 0 end) sumDeliveryPrice
    ,sum( case when taskstate=2 then pays else 0 end) sumOrderPrice
    from t_my_task_detail t left join t_buyer_info b on t.buyerid=b.userid
      where 1=1
        and (t.create_date BETWEEN #{createDate1} and #{createDate2})
        group by DATE_FORMAT(t.create_date,'%Y-%m-%d'),t.buyerid
        order by DATE_FORMAT(t.create_date,'%Y-%m-%d')
  </select>

  <select id="selectWithdrawalMoneyList" resultType="java.util.Map">
     select DATE_FORMAT(t.create_date,'%Y-%m-%d') countCreateDate,b.buyerName,sum(1) sumCount,sum( case when taskstate=4 then 1 else 0 end) sumConfirm
    ,sum( case when taskstate=4 then 1 else 0 end)*${multiple} sumWithdrawalmoney
    from t_my_task_detail t left join t_buyer_info b on t.buyerid=b.userid
      where 1=1
         and (t.create_date BETWEEN #{createDate1} and #{createDate2})
        group by DATE_FORMAT(t.create_date,'%Y-%m-%d'),t.buyerid
        order by DATE_FORMAT(t.create_date,'%Y-%m-%d')
  </select>

  <select id="listFinanceShopReport" resultType="java.util.Map">
    select DATE_FORMAT(t.effectdate,'%Y-%m-%d') counteffectdate,s.shopname,s.loginname,sb.shopname basename,sum(t.actualprice*t.tasknum) sumActualprice,sum(deliveryPrice) sumDeliveryPrice,sum(orderPrice) sumOrderPrice,sum(finishPrice) sumFinishPrice,sum(count) sumCount,
    sum(tasknum) sumtasknum,sum(tasknum)-sum(canreceivenum) sumreceivingnum,sum(finishnum) sumfinishnum,sum(deliverynum) sumdeliverynum,sum(ordernum) sumordernum
    from t_task_base t left join t_shop_info s on t.shopid=s.userid left join t_shop_base sb on t.storename=sb.id LEFT JOIN (
    select taskid,sum(deliveryPrice) deliveryPrice,sum(orderPrice) orderPrice,sum(finishPrice) finishPrice,count(1) count,
    sum(finishnum) finishnum,sum(deliverynum) deliverynum,sum(ordernum) ordernum
    from (select taskid,
    case when taskstate=4 then pays else 0 end finishPrice,
    case when taskstate=3 then pays else 0 end deliveryPrice,
    case when taskstate=2 then pays else 0 end orderPrice,
    case when taskstate=4 then 1 else 0 end finishnum,
    case when taskstate=3 then 1 else 0 end deliverynum,
    case when taskstate=2 then 1 else 0 end ordernum
    from t_my_task_detail where (create_date BETWEEN #{map.createDate1} and #{map.createDate2})) a group by taskid ) b
    on t.id=b.taskid
    where
    1=1
    and t.status <![CDATA[<>]]> '2'
    <if test="map.shopname != '' and map.shopname != null">
      and s.shopname like #{map.shopname}
    </if>
    <if test="map.loginname != '' and map.loginname != null">
      and s.loginname like #{map.loginname}
    </if>
    <if test="map.basename != '' and map.basename != null">
      and sb.shopname like #{map.basename}
    </if>
    <if test="map.shopid != '' and map.shopid != null">
      and t.shopid=#{map.shopid}
    </if>
    and (t.effectdate BETWEEN #{map.createDate1} and #{map.createDate2})
    group by DATE_FORMAT(t.effectdate,'%Y-%m-%d'),sb.shopname,s.shopname
    order by DATE_FORMAT(t.effectdate,'%Y-%m-%d')
  </select>


  <select id="sumTtaskBase" resultType="java.lang.Integer">
    select sum(t.tasknum) from t_task_base t left join t_shop_base sb on t.storename=sb.userid
    left join t_shop_info s on t.shopid=s.userid
    where 1=1
    <if test="map.userid != '' and map.userid != null">
      and t.shopid=#{map.userid}
    </if>
    <if test="map.loginname != '' and map.loginname != null">
      and s.loginname like #{map.loginname}
    </if>
    <if test="map.shopname != '' and map.shopname != null">
      and sb.shopname like #{map.shopname}
    </if>
  </select>
</mapper>